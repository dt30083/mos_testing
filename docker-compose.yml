version: "3.8"

services:
  # VoIP Probe Server - Echoes packets back to clients
  server:
    build:
      context: .
      dockerfile: dockerfile.server
    container_name: voip-probe-server
    ports:
      - "${VOIP_SERVER_PORT:-5005}:5005/udp"
    environment:
      - VOIP_BIND=0.0.0.0
      - VOIP_PORT=5005
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(socket.AF_INET, socket.SOCK_DGRAM); s.settimeout(1); s.sendto(b'test', ('127.0.0.1', 5005)); s.close()"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - voip-test

  # VoIP Probe Client - Example client service (typically run separately)
  client:
    build:
      context: .
      dockerfile: dockerfile.client
    container_name: voip-probe-client
    environment:
      - VOIP_HOST=server  # Use server service name for internal testing
      - VOIP_PORT=5005
      - VOIP_PPS=50
      - VOIP_CODEC=g711
      - VOIP_DURATION=60
    volumes:
      - ./results:/app/results  # Mount local results directory
    depends_on:
      server:
        condition: service_healthy
    networks:
      - voip-test
    profiles:
      - testing  # Only start with --profile testing

networks:
  voip-test:
    driver: bridge

# Example usage:
# Server only: docker-compose up server
# Full test: docker-compose --profile testing up
# External client: docker run --rm -e VOIP_HOST=192.168.1.100 voip-probe-client